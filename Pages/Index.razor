@page "/"
@using FlaggGaming.Pages.componentesIndex
@using FlaggGaming.Model.juegoFlagg
@inject FlaggGaming.Entity.DatosContext datosService
@inject FlaggGaming.Services.ServicioUsuario.ServicioUsurioLogin servicioLoginUsuario
@using Microsoft.EntityFrameworkCore
@using FlaggGaming.Services.ServicioUsuario

<PageTitle>Flagg</PageTitle>
<Carousel/>
<MasBuscados arrayMasBuscados="@arrayMasBuscados"/>
<Ofertas arrayOfertasSeleccionadas="@arrayOfertasSeleccionadas" />
<Destacados />

@code{
    public List<JuegoFlagg> listaJuegosBaseDeDatos = new List<JuegoFlagg>();
    public JuegoFlagg[] arrayMasBuscados { get; set; } = new JuegoFlagg[8];
    public JuegoFlagg[]? arrayOfertas { get; set; }
    public JuegoFlagg[] arrayOfertasSeleccionadas { get; set; } = new JuegoFlagg[8];
    Random objetoRandom = new Random();
    int randIndex;
    JuegoFlagg? juegoRandom;

    protected override async Task OnInitializedAsync()
    {
        listaJuegosBaseDeDatos = datosService.listaJuegosData.ToList();
        arrayMasBuscados = listaJuegosBaseDeDatos.OrderByDescending(game => game.contadorVistas).Where(game => game.imagenMini != null).Take(8).ToArray();
        arrayOfertas = listaJuegosBaseDeDatos.Where(game => game.idOferta != null).ToArray();

        for (int indice = 0; indice < arrayOfertasSeleccionadas.GetLength(0) ; indice++)
        {            
            randIndex = objetoRandom.Next(arrayOfertas.Length);
            juegoRandom = arrayOfertas[randIndex];

            if (juegoRandom.ofertaidOferta == null)
            {
                juegoRandom.ofertaidOferta = new Guid(juegoRandom.idOferta);
                datosService.Update(juegoRandom);
            }
            arrayOfertasSeleccionadas[indice] = juegoRandom;
        }
        datosService.SaveChanges();


    }
}