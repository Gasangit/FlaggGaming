@using FlaggGaming.Model.usuarios
@inject IJSRuntime Javascript
@inject NavigationManager Navigation
@inject FlaggGaming.Entity.DatosContext datosService
@inject FlaggGaming.Services.ServicioUsuario.ServicioUsurioLogin servicioSuscribir
@implements IDisposable
@using FlaggGaming.Services.ServicioUsuario
@using System.Linq
@using Microsoft.EntityFrameworkCore
@inject ProtectedSessionStorage ProtectedSessionStore

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid navbar-custom">
        <a class="navbar-brand" href="#"><img class="logo_nav" src="/imagenes/logoflagg90x90p.png" alt="Nueva Imagen"></a>
        <div class="navbar-divider"></div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 fw-bold">
                <li>
                    <a class="nav-link text-light" href="/listajuegos" role="button" aria-expanded="false">
                        Juegos
                    </a>
                </li>
                <li>
                    <a class="nav-link text-light" href="/listahardware" role="button" aria-expanded="false">
                        Hardware
                    </a>
                </li>
                <li>
                    <a class="nav-link text-light" href="/listatiendas" role="button" aria-expanded="false">
                        Tiendas
                    </a>
                </li>
                <li>
                    <a class="nav-link text-light" href="/sobrenosotros" role="button" aria-expanded="false">
                        Sobre Nosotros
                    </a>
                </li>
            </ul>
        </div>
        
         @* @if (usuarioActual == null) @* ServicioUsurioLogin.Id  / usuarioActual.Id <= 0
        {
            <div class="d-flex justify-content-end usuario">
                <a class="bi bi-star-fill" href="/Login"><img class="logo_usuario" src="/imagenes/logousuario.png" alt="Logo usuario"></a>
            </div>
        } *@
        @if(isConnected){
            if (usuarioActual == null) @*ServicioUsurioLogin.Id  / usuarioActual.Id <= 0*@
            {
                <div class="d-flex justify-content-end usuario">
                    <a class="bi bi-star-fill" href="/Login"><img class="logo_usuario" src="/imagenes/logousuario.png" alt="Logo usuario"></a>
                </div>
            }
            if(usuarioActual != null)@*else*@
            {
                <div class="dropdown">
                    <a class="btn btn-secondary dropdown-toggle nombre-usuario" data-bs-toggle="dropdown" role="button" aria-expanded="false">
                            @usuarioActual.nombre
                        </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        @if (usuarioActual.rolTienda)
                        {

                            <li><a class="dropdown-item" href="/perfiltienda">Perfil tienda</a></li>
                            <li><a class="dropdown-item" href="/misproductos" role="button" aria-expanded="false">Mis Productos</a></li>
                        
                        }
                        @if (!usuarioActual.rolTienda)
                        {
                            <li><a class="dropdown-item" href="/registrotiendas">Registro tienda</a></li>
                        }
                        <li><a class="dropdown-item" href="/perfilusuario">Datos personales</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" href="/" @onclick=servicioSuscribir.setUsuarioLogOut>Salir</a>
                        </li>

                    </ul>
                </div>
            }
        }
        else
        {
            <div class="d-flex justify-content-start usuario">
                <div class="spinner-border"></div>
            </div>
        }
    </div>
</nav>

@code {
    //private string nombre = "";
    private UsuariosTienda usuariostienda = new UsuariosTienda();
    private string nombreActual;
    private UsuarioLogueado? usuarioActual = null;
    private bool isConnected;

    protected async override Task OnInitializedAsync()
    {
        servicioSuscribir.OnUsuarioLogin += ActualizarNombre;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        if (firstRender)
        {
            isConnected = true;
            var result = await ProtectedSessionStore.GetAsync<UsuarioLogueado>("usuarioLogueado");
            if (result.Success) { usuarioActual = result.Value; }
            StateHasChanged();

        }
        
    }

    private async void ActualizarNombre()
    {
        usuarioActual = null;
        var result = await ProtectedSessionStore.GetAsync<UsuarioLogueado>("usuarioLogueado");
        if (result.Success) { usuarioActual = result.Value; }
        StateHasChanged();
    }

    public void Dispose()
    {
        servicioSuscribir.OnUsuarioLogin -= ActualizarNombre;
    }
}

<script>
    window.activarDropdown = () => {
        const dropdownElementList = document.querySelectorAll('.dropdown-toggle')
        const dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl))
    }
</script>