@inject IJSRuntime Javascript



<nav class="navbar navbar-expand-lg bg-body-tertiary mt-3 mx-3 rounded-3 border border-dark">
  <div class="container">
    <a class="navbar-brand" href="#">FLAGG GAMING</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" @href="/ofertasJuegos" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Juegos
          </a>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#">OFERTAS</a></li>
            <li><a class="dropdown-item" href="#">NOVEDADES</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="#">PRECIO FUTURO</a></li>
          </ul>
        </li>
      </ul>
    </div>
  </div>
</nav>


@functions
{
    @functions {

        protected async override Task OnAfterRenderAsync(bool firstRender)
        {

            if (firstRender)
            {
                await Javascript.InvokeAsync<object>("activarDropdown");
                firstRender = false;
            }
        }
    }
}

<script>
    window.activarDropdown = () => { 
        const dropdownElementList = document.querySelectorAll('.dropdown-toggle')
        const dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl))
    }
</script>