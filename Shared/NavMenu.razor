@inject IJSRuntime Javascript



<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid navbar-custom">
    <a class="navbar-brand" href="#"><img class="logo_nav" src="/imagenes/logoflagg90x90p.png" alt="Nueva Imagen"></a>
    <div class="navbar-divider"></div>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" @href="/ofertasJuegos" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Juegos
          </a>
           <div class="dropdown-content">  
                        <!-- Agrega más elementos de menú aquí -->
                       <a href="/Producto">Producto</a>
                        <a href="/Registro">Registro</a>
                        <a href="/Login">Login</a>
          </div>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/HardwareLayout" role="button">Hardware</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/RegistroTiendas" role="button">Registro Tiendas</a>
        </li>
      </ul>
    </div>
        <div class="d-flex justify-content-end usuario">
            <a class="bi bi-star-fill" href="/Login"><img clases="logo_usuario" src="/imagenes/logousuario.png" alt="Logo usuario"></a>
        </div>
  </div>
</nav>


@functions  
{
    @functions {

        protected async override Task OnAfterRenderAsync(bool firstRender)
        {

            if (firstRender)
            {
                await Javascript.InvokeAsync<object>("activarDropdown");
                firstRender = false;
            }
        }
    }
}

<script>
    window.activarDropdown = () => { 
        const dropdownElementList = document.querySelectorAll('.dropdown-toggle')
        const dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl))
    }
</script>