// <auto-generated />
using System;
using FlaggGaming.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlaggGaming.Migrations
{
    [DbContext(typeof(DatosContext))]
    [Migration("20241010000252_inicialVersion6")]
    partial class inicialVersion6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlaggGaming.Model.Juego", b =>
                {
                    b.ToTable("Juego");
                });

            modelBuilder.Entity("FlaggGaming.Model.apiEpic.apiEpicListaJuegosTotal.ItemListaJuegoEpic", b =>
                {
                    b.Property<int>("appid")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ItemListaJuegoEpic");
                });

            modelBuilder.Entity("FlaggGaming.Model.apiSteamListaJuegosTotal.ItemListaJuegoSteam", b =>
                {
                    b.Property<int>("appid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("appid"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("appid");

                    b.ToTable("listaJuegos");
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.JuegoFlagg", b =>
                {
                    b.Property<Guid>("idFlagg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFlagg")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("contadorVistas")
                        .HasColumnType("int")
                        .HasColumnName("contadorVistas");

                    b.Property<string>("descripcionCorta")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcionCorta");

                    b.Property<string>("estudio")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("estudio");

                    b.Property<int?>("idJuegoTienda")
                        .HasColumnType("int")
                        .HasColumnName("idJuegoTienda");

                    b.Property<string>("idOferta")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("idOferta");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagen");

                    b.Property<string>("imagenMini")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagenMini");

                    b.Property<string>("nombre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nombre");

                    b.Property<Guid?>("ofertaidOferta")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ofertaidOferta");

                    b.Property<string>("requisitos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requisitos");

                    b.Property<string>("tienda")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tienda");

                    b.Property<string>("urlEpic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("urlEpic");

                    b.Property<string>("urlTienda")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("urlTienda");

                    b.HasKey("idFlagg")
                        .HasName("PK__juegos__E007760D83E62722");

                    b.HasIndex("ofertaidOferta");

                    b.ToTable("juegos", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.Oferta", b =>
                {
                    b.Property<Guid>("idOferta")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idOferta");

                    b.Property<int>("discount_percent")
                        .HasColumnType("int")
                        .HasColumnName("discount_percent");

                    b.HasKey("idOferta");

                    b.ToTable("ofertas", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.ReleaseDate", b =>
                {
                    b.Property<bool>("ComingSoon")
                        .HasColumnType("bit")
                        .HasColumnName("coming_soon");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid>("IdFlagg")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFlagg");

                    b.HasIndex("IdFlagg");

                    b.ToTable("release_date", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("DescCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("desc_categoria");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagen_url");

                    b.HasKey("IdCategoria")
                        .HasName("PK__categori__CD54BC5A900ED068");

                    b.ToTable("categorias", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Producto", b =>
                {
                    b.Property<int>("IdInternoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_interno_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInternoProducto"));

                    b.Property<string>("DescTienda")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("desc_tienda");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int")
                        .HasColumnName("id_tienda");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<decimal>("PrecioVta")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("precio_vta");

                    b.Property<string>("SkuTienda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sku_tienda");

                    b.HasKey("IdInternoProducto")
                        .HasName("PK__producto__A83A1C380111D261");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdTienda");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cuit");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("days");

                    b.Property<string>("Dir")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dir");

                    b.Property<string>("Hr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hr");

                    b.Property<string>("Insta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("insta");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mail");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<bool>("Premium")
                        .HasColumnType("bit")
                        .HasColumnName("premium");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.HasKey("Id")
                        .HasName("PK__tiendas__3213E83F70A355A0");

                    b.HasIndex(new[] { "RazonSocial" }, "UQ__tiendas__17BADCA0552EA015")
                        .IsUnique();

                    b.HasIndex(new[] { "Cuit" }, "UQ__tiendas__2CDD9897AFA3BFAE")
                        .IsUnique();

                    b.HasIndex(new[] { "Mail" }, "UQ__tiendas__7A21290479191779")
                        .IsUnique();

                    b.ToTable("tiendas", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("eMail");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<bool>("rolTienda")
                        .HasColumnType("bit")
                        .HasColumnName("rolTienda");

                    b.HasKey("Id")
                        .HasName("PK__usuarios__3213E83F26EBE7FB");

                    b.HasIndex(new[] { "mail" }, "UQ__usuarios__410EDA2FD624E763")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("FlaggGaming.Model.usuarios.UsuariosTienda", b =>
                {
                    b.Property<int>("IdU")
                        .HasColumnType("int")
                        .HasColumnName("idU");

                    b.Property<int>("IdT")
                        .HasColumnType("int")
                        .HasColumnName("idT");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.HasKey("IdU", "IdT")
                        .HasName("PK__usuarios__01951BBA4021FFF4");

                    b.HasIndex("IdT");

                    b.ToTable("usuarios_tiendas", null, t =>
                        {
                            t.HasTrigger("ActualizarRolTienda");
                        });
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.JuegoFlagg", b =>
                {
                    b.HasOne("FlaggGaming.Model.juegoFlagg.Oferta", "oferta")
                        .WithMany("juegos")
                        .HasForeignKey("ofertaidOferta");

                    b.Navigation("oferta");
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.ReleaseDate", b =>
                {
                    b.HasOne("FlaggGaming.Model.juegoFlagg.JuegoFlagg", "IdFlaggNavigation")
                        .WithMany()
                        .HasForeignKey("IdFlagg")
                        .IsRequired()
                        .HasConstraintName("FK_release_date_juegos");

                    b.Navigation("IdFlaggNavigation");
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Producto", b =>
                {
                    b.HasOne("FlaggGaming.Model.tienda.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__productos__id_ca__4D94879B");

                    b.HasOne("FlaggGaming.Model.tienda.Tienda", "IdTiendaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdTienda")
                        .IsRequired()
                        .HasConstraintName("FK__productos__id_ti__4E88ABD4");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdTiendaNavigation");
                });

            modelBuilder.Entity("FlaggGaming.Model.usuarios.UsuariosTienda", b =>
                {
                    b.HasOne("FlaggGaming.Model.tienda.Tienda", "IdTNavigation")
                        .WithMany("UsuariosTienda")
                        .HasForeignKey("IdT")
                        .IsRequired()
                        .HasConstraintName("FK__usuarios_ti__idT__5070F446");

                    b.HasOne("FlaggGaming.Model.usuarios.Usuario", "IdUNavigation")
                        .WithMany("UsuariosTienda")
                        .HasForeignKey("IdU")
                        .IsRequired()
                        .HasConstraintName("FK__usuarios_ti__idU__5165187F");

                    b.Navigation("IdTNavigation");

                    b.Navigation("IdUNavigation");
                });

            modelBuilder.Entity("FlaggGaming.Model.juegoFlagg.Oferta", b =>
                {
                    b.Navigation("juegos");
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("FlaggGaming.Model.tienda.Tienda", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("UsuariosTienda");
                });

            modelBuilder.Entity("FlaggGaming.Model.usuarios.Usuario", b =>
                {
                    b.Navigation("UsuariosTienda");
                });
#pragma warning restore 612, 618
        }
    }
}
